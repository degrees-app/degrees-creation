import { useDispatch, useSelector } from 'react-redux';
import { RootState, AppDispatch } from '../../app/store';
import { setTextStyle } from '../../entities/interface/model/interfaceSlice';
import { Box, Button, Select, MenuItem, InputLabel } from '@mui/material';


// –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏ —à—Ä–∏—Ñ—Ç–æ–≤
const fontFamilies = [
  'Arial',
  'Courier New',
  'Georgia',
  'Times New Roman',
  'Verdana',
  'Comic Sans MS',
  'Impact',
  'Lucida Console',
  'Tahoma',
  'Trebuchet MS',
];

export const InterfaceForm = () => {
  const dispatch = useDispatch<AppDispatch>();
  const { textStyle } = useSelector((state: RootState) => state.interface);

  const handleFontChange = (event: React.ChangeEvent<{ value: unknown }>) => {
    dispatch(setTextStyle({ fontFamily: event.target.value as string }));
  };

  const handleColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    dispatch(setTextStyle({ color: event.target.value }));
  };

  // üíæ –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (canvas + —Å—Ç–∏–ª–∏)
  const handleSave = async () => {
    const canvas = document.querySelector('canvas');
    if (!canvas) {
      alert('Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º canvas –≤ base64
    const imageBase64 = canvas.toDataURL('image/png');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    try {
      const response = await fetch('/api/interface/save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          image: imageBase64,
          fontFamily: textStyle.fontFamily,
          color: textStyle.color,
        }),
      });

      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏');

      alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    }
  };

  return (
    <Box sx={{ width: 300, padding: 2, border: '1px solid #ccc', borderRadius: 2 }}>
      {/* –í—ã–±–æ—Ä —à—Ä–∏—Ñ—Ç–∞ */}
      <InputLabel sx={{ color: 'white' }}>–°—Ç–∏–ª—å —à—Ä–∏—Ñ—Ç–∞</InputLabel>
      <Select
        value={textStyle.fontFamily}
        onChange={handleFontChange}
        fullWidth
        sx={{ mt: 1, backgroundColor: 'white', color: 'black' }}
      >
        {fontFamilies.map((font) => (
          <MenuItem key={font} value={font}>
            {font}
          </MenuItem>
        ))}
      </Select>

      {/* –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ */}
      <InputLabel sx={{ mt: 2, color: 'white' }}>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</InputLabel>
      <input
        type="color"
        value={textStyle.color}
        onChange={handleColorChange}
        style={{ width: '100%', height: '40px', border: 'none', cursor: 'pointer' }}
      />

      {/* –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
      <Button variant="contained" fullWidth onClick={handleSave} sx={{ mt: 2 }}>
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
      </Button>
    </Box>
  );
};
