const express = require('express');
const fs = require('fs/promises');
const sharp = require('sharp');
const upload = require('../middlewares/multer');
const { Background } = require('../../db/models');

const backgroundRouter = express.Router();

// üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ + —Ü–≤–µ—Ç)
backgroundRouter.post('/save', upload.single('file'), async (req, res) => {
  try {
    console.log('here');
    const { backgroundColor, brightness, contrast, animationColor, animationType } =
      req.body;

    let backgroundImage = null;
    if (req.file) {
      const fileName = `${Date.now()}.webp`;
      const outputBuffer = await sharp(req.file.buffer).webp().toBuffer();
      await fs.writeFile(`./public/img/${fileName}`, outputBuffer);
      backgroundImage = fileName;
    }

    const newBackground = await Background.create({
      backgroundImage,
      backgroundColor,
      brightness,
      contrast,
      animationColor,
      animationType,
    });

    res.json(newBackground);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ–Ω–∞:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤
backgroundRouter.get('/get', async (req, res) => {
  try {
    const backgrounds = await Background.findAll();
    res.json(backgrounds);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

module.exports = backgroundRouter;
